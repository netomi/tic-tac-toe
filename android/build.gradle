apply plugin: 'com.android.application'

android {
    compileSdkVersion versions.compileSdk
    buildToolsVersion versions.buildTools

    defaultConfig {
        applicationId "org.netomi.tictactoe"

        minSdkVersion    versions.minSdk
        targetSdkVersion versions.targetSdk

        versionCode versions.code
        // Notice that you may want to use BUILD_NUMBER from CI in real project with own CI.
        versionName versions.name

        // Make generated apks contain version name and code.
        archivesBaseName = "app-${versions.name}-${versions.code}"

        vectorDrawables.useSupportLibrary = true

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    dataBinding {
        enabled = true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    signingConfigs {
        release {
            storeFile file('keystore.jks')
            storePassword 'tictactoe'
            keyAlias = 'tictactoe'
            keyPassword 'tictactoe'
        }
    }

    buildTypes {
        debug {
            applicationIdSuffix '.debug'

            // Enables code coverage with Jacoco only for instrumentation tests.
            // Coverage for JVM tests done by code_quality_tools/jacoco.gradle.
            testCoverageEnabled false
        }

        release {
            signingConfig signingConfigs.release

            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            // Enables code coverage with Jacoco only for instrumentation tests.
            // Coverage for JVM tests done by code_quality_tools/jacoco.gradle.
            testCoverageEnabled false
        }
    }

    lintOptions {
        warningsAsErrors true
        abortOnError     true // Fail early.
    }

    packagingOptions {
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/services/javax.annotation.processing.Processor'
    }

    // This allows us see tests execution progress in the output on the CI.
    testOptions.unitTests.all {
        testLogging {
            events 'passed', 'skipped', 'failed', 'standardOut', 'standardError'
            exceptionFormat 'full'
        }
    }
}

// Libraries declared in dependencies.gradle in the root of the project
dependencies {
    //implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation libraries.rxJava
    implementation libraries.rxAndroid

    implementation libraries.appCompat
    implementation libraries.gridLayout
    implementation libraries.fragment

    testImplementation testLibraries.junit

    androidTestImplementation testLibraries.espressoCore
    androidTestImplementation testLibraries.testRunner
    androidTestImplementation testLibraries.testRules
    androidTestImplementation testLibraries.testExtJunit
}
